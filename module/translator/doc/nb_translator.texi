\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename nb_translator.info
@include version.texi
@settitle Translator NodeBrain Module
@c %**end of header

@finalout
@paragraphindent none
@setchapternewpage odd

@copying
Translator NodeBrain Module
@*September 2011
@*The Boeing Company,  P.O. Box 3707, Seattle, WA 98124, USA

@sp 2
@b{Release @value{RELEASE}}

Author: Ed Trettevik <eat@@nodebrain.org>

Copyright @copyright{} 2012 The Boeing Company

@sp 1
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in the section titled @i{GNU Free Documentation License} at the end of this document.

@sp 1
NodeBrain(TM) is a trademark of The Boeing Company. All other trademarks and registered trademarks referenced in this document are the trademarks of their respective owners.

@sp 2
@b{Software License}

@multitable {------------------------------} {----------------------------------------------------}
@item Copyright @copyright{} 1998--2010 @tab The Boeing Company
@item @tab Ed Trettevik <eat@@nodebrain.org>
@end multitable

NodeBrain is free software; you can redistribute it and/or  modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option)any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License formore details.

You should have received a copy of the GNU General PublicLicense along with this program; if not, write to Free Software Foundation,Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
@end copying

@iftex
@titlepage
@c @image{./image001,32pt,32pt,,gif}

@titlefont{Translator NodeBrain  Module}
@sp 1
@tex
\vskip4pt \hrule height 3pt width \hsize
@end tex
@sp 3
@b{Version @value{VERSION}}
@page
@vskip 0pt plus 1filll
@insertcopying

@c History Preface and Document Conventions 
@page
@b{History}

@multitable {-------------} {--------------------------------------------------------------------------------------------------------}
@item 2005-10-12 @tab
Title: @i{Translator NodeBrain Module}@*  
Author: Ed  Trettevik <eat@@nodebrain.org>@*
Publisher: The Boeing Company

@item 2010-12-31 @tab
Release 0.8.3
@itemize @bullet
@item Updates - still needed
@end itemize

@end multitable

@page
@b{Preface}

@sp 1
This module is intended for readers seeking an introduction to NodeBrain through a series of simple examples. Other documents are available for readers looking for a more complete reference to the rule language, modules, or API (application programmatic interface).

The intent of the examples is to illustrate individual concepts, not to provide complete working applications or show all related options. We avoid formal syntax descriptions, thinking you are here because you want to figure it out from examples.  

Files referenced in this tutorial are included in the tutorial directory of the NodeBrain distribution.  

See www.nodebrain.org for more information and the latest update to this document.

@include conventions.texi

@end titlepage

@end iftex

@c ----------------------------------------------------------
@c Not printed document

@ifnottex
@node Top
@top Translator NodeBrain Module

This manual is for the Translator NodeBrain Module (version @value{VERSION}, @value{UPDATED-MONTH}), a
plug-in for translating character strings into cell values and/or NodeBrain commands.
@*@* 
Copyright @copyright{} 2006, 2007, 2008, 2009, 2010, 2011 The Boeing Company.
@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section titled @i{GNU Free Documentation License} at the end of this document.
@end quotation

@ifnotplaintext
@b{Short Table of Contents}
@end ifnotplaintext
@menu
* Concepts:: Foundation
* Tutorial:: Introduction by Example
* Commands:: Syntax and Semantics
* Triggers:: Conditions and Response
@end menu

@ifnotplaintext
@b{References}
@end ifnotplaintext
@menu
* GNU Free Documentation License::
* Index::
@end menu
@end ifnottex

@c Set page footings
@oddfooting @thistitle @| @| @thispage
@evenfooting @thispage @| @| @thistitle

@c Contents
@oddheading @| @| 
@evenheading @| @|
@contents

@c Set page headings for document
@oddheading @thischapter @| @| @value{UPDATED-MONTH}
@evenheading @value{UPDATED-MONTH} @| @| @thischapter

@node Concepts
@chapter Concepts
@cindex Concepts

A translator node accepts character strings and, based on regular expression matching,
translates them into classification values and/or NodeBrain commands.

@node Tutorial
@chapter Tutorial
@cindex Tutorial
@include nb_translator_tutorial.texi


@node Commands
@chapter Commands
@cindex Commands

This section describes the syntax and symantics of commands used with the Translator module.

@section Define
@cindex Define
@cindex define translator

A translator is specified in a translator file, but defined to NodeBrain using a @code{define} command.

@cartouche
@smallexample
define @i{node} node translator("@i{filename}");
@end smallexample
@end cartouche

@multitable {--------------------} {--------------------------------------------------------------------------------------}
@item @b{Parameters}@w{        }@tab @b{Description}
@item @i{filename}
@tab Name of translator file.
The filename by convention has a ".nbx" suffix, but this is not required.
@end multitable
@*
See "Translators" in the @i{NodeBrain Language Reference} for information on coding translator files.

@section Assertions
@cindex assertions

Strings may be asserted to a translator node for translation. A translator node accepts any number of string arguments.
When multiple arguments are asserted, they are translated in the order specified.
@cartouche
@smallexample
define @i{term} on(@i{condition}) @i{node}(@i{string1},@i{string2},...);     # Asserted strings
assert @i{node}(@i{string1},@i{string2},...);     # Asserted strings
@end smallexample
@end cartouche

@section Cell Expressions
@cindex expressions

Translators may be used as cell expressions for string classification.

@cartouche
@smallexample
define @i{term} cell @i{node}(@i{string1},@i{string2},...);
@end smallexample
@end cartouche

The value of a translator cell expression is determined by the translator specification file.
If a "value" operator is not encountered during the string matching process, the value is 1 for recognized strings and Unknown for unrecognized strings.
Other values may be explicitly specified within the translator using "value" operations of the form @code{$(expression)}. 
When value operations are encountered during the matching process, the last encountered value determines the cell expression value.  
If the value of the matching operation on the first argument string is Unknown, matching continues with subsequent argument
strings until a value other than Unknown is established or the end of the arugment list is reached.

@section Node Commands
@cindex node commands

Text may be sent to a translator using a node command.
@cartouche
@smallexample
@i{node}:@i{text}
@end smallexample
@end cartouche

A translator node also supports special node commands identified by a "verb" argument.

@cartouche
@smallexample
@i{node}("@i{verb}"):@i{body}
@end smallexample
@end cartouche

A verb of "translate" instructs the node to translate a file.

@cartouche
@smallexample
@i{node}("translate"):@i{filename}
@end smallexample
@end cartouche

A verb of "do" is used to send a command to the translator.  This can be used to update a translator dynamically in response to monitored conditions.
See "Translators" in the @i{NodeBrain Language Reference} for information on translator commands.

@cartouche
@smallexample
@i{node}("do"):@i{command}
@end smallexample
@end cartouche

@node Triggers
@chapter Triggers
@cindex triggers

When a string is sent to a translator node, by an assertion or a command, the node may emit NodeBrain commands.
Emitted commands executed in the context of the translator node. To direct a command to another node, a context prefix is required on the command within the translator file.

@node GNU Free Documentation License
@unnumbered GNU Free Documentation License
@include fdl.texi

@node Index 
@unnumbered Index 
@printindex cp 
@bye 
