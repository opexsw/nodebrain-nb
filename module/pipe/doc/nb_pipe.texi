\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename nb_pipe.info
@include version.texi
@settitle Pipe NodeBrain Module
@c %**end of header

@finalout
@paragraphindent none
@setchapternewpage odd

@copying
Pipe NodeBrain Module@*
July 2012@*
NodeBrain Open Source Project

@sp 2
@b{Release @value{RELEASE}}

Author: Ed Trettevik

Copyright @copyright{} 2014 Ed Trettevik <eat@@nodebrain.org>

@sp 1
Permission is granted to copy, distribute and/or modify this document under the terms of either the MIT License (Expat) or the NodeBrain License.
@sp 1
@include ../../../doc/licenses.texi
@end copying

@iftex
@titlepage
@c @image{./image001,32pt,32pt,,gif}

@titlefont{Pipe NodeBrain Module}
@sp 1
@tex
\vskip4pt \hrule height 3pt width \hsize
@end tex
@sp 3
@b{Release @value{RELEASE}}
@page
@vskip 0pt plus 1filll
@insertcopying

@c History Preface and Document Conventions 
@page
@b{History}

@multitable {-------------} {--------------------------------------------------------------------------------------------------------}
@item 2005-10-12 @tab
Title: @i{NodeBrain  Tutorial}@*  
Author: Ed  Trettevik <eat@@nodebrain.org>@*
Publisher: NodeBrain Open Soure Project

@item 2010-12-31 @tab
Release 0.8.3
@itemize @bullet
@item Updates - still needed
@end itemize

@end multitable

@page
@b{Preface}

@sp 1
This tutorial is intended for readers seeking an introduction to NodeBrain through a series of simple examples. Other documents are available for readers looking for a more complete reference to the rule language, modules, or API (application programmatic interface).

The intent of the examples in this tutorial is to illustrate individual concepts, not to provide complete working applications or show all related options.
We avoid formal syntax descriptions, thinking you are here because you want to figure it out from examples.  

Files referenced in this tutorial are included in the tutorial directory of the NodeBrain distribution.  

See www.nodebrain.org for more information and the latest update to this document.

@include conventions.texi

@end titlepage

@end iftex

@c ----------------------------------------------------------
@c Not printed document

@ifnottex
@node Top
@top Pipe NodeBrain Module

This manual is for the Pipe NodeBrain Module (version @value{VERSION}, @value{UPDATED-MONTH}) used to accept commands via named pipe.
@*@*
Copyright @copyright{} 2014 Ed Trettevik <eat@@nodebrain.org>
@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of either the MIT License (Expat) or NodeBrain License.
See the @i{Licenses} section at the end of this document for details.
@end quotation
@ifnotplaintext
@b{Short Table Of Contents}
@menu
* Concepts:: Foundation
* Tutorial:: Introduction by Example
* Commands:: Syntax and Semantics
* Triggers:: Conditions and Response
@end menu
@menu
* Licenses::
* Index::
@end menu
@end ifnotplaintext
@end ifnottex

@c Set page footings
@oddfooting @thistitle @| @| @thispage
@evenfooting @thispage @| @| @thistitle

@c Contents
@oddheading @| @| 
@evenheading @| @|
@contents

@c Set page headings for document
@oddheading @thischapter @| @| @value{UPDATED-MONTH}
@evenheading @value{UPDATED-MONTH} @| @| @thischapter

@node Concepts
@chapter Concepts
@cindex concepts

The Pipe module provides a simple unauthenticated method of communication between NodeBrain and external programs running on the same system. A pipe server node is used to accept input from other programs while a pipe node is used to write output to another program. You must use file permissions on the pipe (FIFO) file for security. An identity is associated with input commands to enable restrictions on the input commands.

@node Tutorial
@chapter Tutorial
@cindex tutorial
@include nb_pipe_tutorial.texi

@node Commands
@chapter Commands
@cindex commands

This sections describes commands used with the Pipe module.

@section Define
@cindex define command
 
@subheading Syntax
@table @command	   
@item @i{pipeServerDefineCmd}	
::= @b{define} @v{s} @i{term} @v{s} @b{node} [@v{s} pipeServerDef ] @bullet{}	   
			   
@item @i{pipeServerDef}	
::= @b{pipe.server("}@i{identity}@@@i{fileName}@b{");}	   
			   
@item @i{Identify}	
::= name of identity to associate with input commands	   
			   
@item @i{Filename}	
::= name of input pipe (FIFO)	   
@end table			 

The identity must be declared prior to pipe server definition.  The FIFO identified by @code{@i{fileName}} must exist when a pipe server is enabled.

@cartouche
@smallexample
declare fred identity @dots{} ; 
define mypipe node pipe(”fred@@pipe/myhose”);
@dots{} include rules here@dots{} 
@end smallexample
@end cartouche

@subsection Pipe Server Commands
@cindex pipe server commands

The @command{ENABLE} and @command{DISABLE} commands are supported. Node commands and assertions are not currently supported.

@subsection Pipe Server Rules
@cindex piper server rules

Commands read from the pipe file are interpreted in the context of the pipe server node. Rules defined in this context must be designed for compatibility with the commands written to the pipe by the external program.

@subsection Pipe Definition
@cindex pipe defintion

 
@subheading Syntax
@table @command	   
@item @i{pipeDefineCmd}	
::= @b{define} @v{s} @i{term} @v{s} @b{node} [@v{s} @i{pipeDef }] @bullet{}	   
			   
@item @i{pipeDef}	
::= @b{pipe(} @i{“ fileName ”} @b{);}	   
			   
@item @i{Filename}	
::= name of output pipe (FIFO)
	   
@end table			 

The FIFO identified by @code{@i{fileName}} must exist when a command is issued to the pipe node.

@cartouche
@smallexample
	define mypipe node pipe("pipe/myhose");
@end smallexample
@end cartouche
	
@subsection Pipe Commands
@cindex pipe commands

Commands directed to a pipe node are simply written to the pipe (FIFO) file. 

@cartouche
@smallexample
	@i{node:@dots{} any text@dots{}}
@end smallexample
@end cartouche

The @command{ENABLE} and @command{DISABLE} commands and assertions are not supported.

@node Triggers
@chapter Triggers
@cindex triggers

This module does not implement triggers.  Each line received on a pipe is passed to the interpretter.

@ifnottex
@node Licenses
@unnumbered Licenses

NodeBrain is free software; you can modify and/or redistribute it, including this document, under the
terms of either the MIT License (Expat) or the NodeBrain License.

@sp 1
@include ../../../doc/licenses.texi
@end ifnottex

@node Index 
@unnumbered Index 
@printindex cp 
@bye 

 
