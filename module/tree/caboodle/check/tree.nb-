declare tree module {"../.libs"};
define x node tree;
x. assert ("abc","def","xyz");
x. assert ("abc","def","abc");
x. assert ("abc","def",23);
show x
x@prune("abc","def");
show x
x. assert ("abc","def","xyz");
x. assert ("abc","def","abc");
x. assert ("abc","def",23);
# This should fire after r1
define r0 on(?x("abc","def",23));
define r1 on(a=1) x@prune("abc","def");
assert y=1;
show x
show r1
show x
assert a;
show x
x. assert ("abc","def","xyz");
x. assert ("abc","def","abc");
x. assert ("abc","def",23);
show x
assert x@prune("abc","def");
show x
# Not yet implemented
assert !b;
define r2 on(b && x@prune("abc","def"));
show r2
x. assert ("abc","def","xyz");
x. assert ("abc","def","abc");
x. assert ("abc","def",23);
x. assert ("abc","def");
show x
assert b;
show x
