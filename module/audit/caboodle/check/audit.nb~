# Audit module check script
~ > # Audit module check script
-cp /dev/null log/audit.log
~ > -cp /dev/null log/audit.log
~ [0] Started: -cp /dev/null log/audit.log
~ [0] Exit(0)
declare audit module {"../.libs"}; # for checking only
~ > declare audit module {"../.libs"}; # for checking only
define trigger cell 0;
~ > define trigger cell 0;
define audit node audit("log/audit.log","plan/audit/audit.nbx",trigger);
~ > define audit node audit("log/audit.log","plan/audit/audit.nbx",trigger);
~ 1970-01-01 00:00:01 NB000I Loading translator "plan/audit/audit.nbx"
~ ---------- --------
~ # This is a translator for testing the audit skill module
~ (not really):assert !really;
~ (really):assert really;
~ ---------- --------
~ 1970-01-01 00:00:02 NB000I Translator "plan/audit/audit.nbx" loaded successfully.
audit. use (hush);
~ > audit. use (hush);
audit. use (!hush);
~ > audit. use (!hush);
audit:trace
~ > audit:trace
enable audit;
~ > enable audit;
~ 1970-01-01 00:00:01 NM000T audit audit: auditEnable() called log/audit.log using
~ 1970-01-01 00:00:02 NM000I audit audit: Enabled audit of log/audit.log using plan/audit/audit.nbx
-echo "this is really something silly" >> log/audit.log
~ > -echo "this is really something silly" >> log/audit.log
~ [0] Started: -echo "this is really something silly" >> log/audit.log
~ [0] Exit(0)
-echo "this is not really that silly" >> log/audit.log 
~ > -echo "this is not really that silly" >> log/audit.log 
~ [0] Started: -echo "this is not really that silly" >> log/audit.log 
~ [0] Exit(0)
assert trigger;
~ > assert trigger;
~ ---------- --------
~ ] this is really something silly
~ > audit. assert really;
~ ] this is not really that silly
~ > audit. assert !really;
~ ---------- --------
~ 1970-01-01 00:00:01 NM000T audit audit: File size=61
assert !trigger;
~ > assert !trigger;
audit:notrace;
~ > audit:notrace;
-echo "this is really ok with me" >> log/audit.log
~ > -echo "this is really ok with me" >> log/audit.log
~ [0] Started: -echo "this is really ok with me" >> log/audit.log
~ [0] Exit(0)
-echo "this is not really ok" >> log/audit.log
~ > -echo "this is not really ok" >> log/audit.log
~ [0] Started: -echo "this is not really ok" >> log/audit.log
~ [0] Exit(0)
assert trigger;
~ > assert trigger;
~ > audit. assert really;
~ > audit. assert !really;
disable audit;
~ > disable audit;
~ 1970-01-01 00:00:01 NM000I audit audit: Disabled audit of log/audit.log using plan/audit/audit.nbx
undefine audit;
~ > undefine audit;

# Try it again to make sure the undefine was good
~ > # Try it again to make sure the undefine was good
define audit node audit("log/audit.log","plan/audit/audit.nbx",trigger);
~ > define audit node audit("log/audit.log","plan/audit/audit.nbx",trigger);
~ 1970-01-01 00:00:01 NB000I Loading translator "plan/audit/audit.nbx"
~ ---------- --------
~ # This is a translator for testing the audit skill module
~ (not really):assert !really;
~ (really):assert really;
~ ---------- --------
~ 1970-01-01 00:00:02 NB000I Translator "plan/audit/audit.nbx" loaded successfully.
assert !trigger;
~ > assert !trigger;
enable audit;
~ > enable audit;
~ 1970-01-01 00:00:01 NM000I audit audit: Enabled audit of log/audit.log using plan/audit/audit.nbx
-echo "this is really something silly" >> log/audit.log
~ > -echo "this is really something silly" >> log/audit.log
~ [0] Started: -echo "this is really something silly" >> log/audit.log
~ [0] Exit(0)
-echo "this is not really that silly" >> log/audit.log
~ > -echo "this is not really that silly" >> log/audit.log
~ [0] Started: -echo "this is not really that silly" >> log/audit.log
~ [0] Exit(0)
assert trigger;
~ > assert trigger;
~ > audit. assert really;
~ > audit. assert !really;
undefine audit;  # undefine without disabling first
~ > undefine audit;  # undefine without disabling first
~ 1970-01-01 00:00:01 NM000I audit audit: Disabled audit of log/audit.log using plan/audit/audit.nbx
