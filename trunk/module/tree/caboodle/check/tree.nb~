declare tree module {"../.libs"};
~ > declare tree module {"../.libs"};
assert a=1,b=2,c=3;
~ > assert a=1,b=2,c=3;
define alder node tree;
~ > define alder node tree;
assert alder(1,2,3);
~ > assert alder(1,2,3);
show alder;
~ > show alder;
~ alder = # == node tree
~   1
~     2
~       3=1
define r1 on(alder(a,b,c));
~ > define r1 on(alder(a,b,c));
alder. assert ?(a,b,c);
~ > alder. assert ?(a,b,c);
alder. assert (1,2,3),(2,3,4),(1,5),("abc","def");
~ > alder. assert (1,2,3),(2,3,4),(1,5),("abc","def");
~ 1970/01/01 00:00:01 NB000I Rule r1 fired 
assert !alder(1,2,3);
~ > assert !alder(1,2,3);
assert alder(a,b,c);
~ > assert alder(a,b,c);
~ 1970/01/01 00:00:01 NB000I Rule r1 fired 
show alder;
~ > show alder;
~ alder = ? == node tree
~   "abc"
~     "def"=1
~   2
~     3
~       4=1
~   1
~     5=1
~     2
~       3=1
